# This is a basic workflow to help you get started with Actions

name: 'Test Json Parameters'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    environment:
      name: ${{ github.ref_name }}


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: view the environment context
        shell: bash
        run: echo "$ENVIRONMENT_CONTEXT"
        env:
          ENVIRONMENT_CONTEXT: ${{ github.ref_name }}

      - name: view the variables context
        shell: bash
        run: echo "$VARIABLES_CONTEXT"
        env:
          VARIABLES_CONTEXT: ${{ toJson(vars) }}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script ls
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.    
          ls

      - name: view the secrets context
        shell: bash
        run: echo "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Replace values in JSON file
        uses: tnikFi/json-file-transform@v1
        with:
          files: 'parameters_json.json'
          key-value-pairs: |
            parameters.locationRG.value=${{ vars.environment }}
            parameters.locationSKU.value=S1

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo Hello, world!
          ls
          ls IaC
          cat parameters_json.json

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
