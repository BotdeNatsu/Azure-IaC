name: Deploy Python project to Azure Function App

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
    - main
  #pull_request:
    #branches:
    #- main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on:  ubuntu-latest
    environment:
      name: ${{ github.ref_name }}

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}  

    - name: Setup Python ${{ vars.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ vars.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './.'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: 'func-${{ vars.appName }}'
        package: '.'
        scm-do-build-during-deployment: true
        enable-oryx-build: true

    # Deploy template at the selected scope
    - name: Set Environment Variables
      uses: Azure/cli@v2
      with:
        inlineScript: |
          az functionapp config appsettings set \
            --name func-${{ vars.appName }} \
            --resource-group ${{ vars.resourceGroupName }} \
            --settings DATABASE_ID=${{ vars.cosmosDatabaseName }} \
            CONTAINER_ID=${{ vars.cosmosContainerName }}